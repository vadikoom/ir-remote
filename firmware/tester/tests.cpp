#ifdef UNIT_TEST
#define uint16_t unsigned short

#include <stdio.h>
#include "./lessar_command.h"
#include "debug.h"

uint16_t rawCommand[] = { 5050, 
	4300,4300, 550,1600, 550,550, 500,1650, 500,1600, 550,550, 550,500, 550,1600, 550,550, 550,500, 550,1600, 550,550, 500,550, 550,1600, 550,1600, 550,550, 500,1650, 500,1600, 550,550, 550,500, 550,1600, 550,1600, 550,1600, 550,1600, 550,1600, 550,500, 550,1600, 550,1600, 550,550, 500,550, 550,550, 500,550, 550,550, 550,1600, 500,1650, 500,550, 550,1600, 550,550, 500,550, 550,550, 500,550, 550,550, 500,550, 550,1600, 550,550, 500,1600, 550,1600, 550,1600, 550,1600, 550,5100, 4350,4250, 550,1600, 550,550, 550,1600, 500,1650, 500,550, 550,550, 500,1650, 500,550, 550,550, 500,1650, 500,550, 550,550, 500,1600, 550,1600, 550,550, 550,1600, 500,1650, 500,550, 550,550, 500,1650, 500,1650, 500,1600, 550,1600, 550,1600, 550,550, 500,1650, 500,1600, 550,550, 550,550, 500,550, 550,550, 500,550, 550,1600, 550,1600, 550,500, 550,1600, 550,550, 550,500, 550,550, 500,550, 550,550, 550,500, 550,1600, 550,550, 500,1650, 550,1600, 550,1550, 600,1550, 550
};

void testSimplePrint() {
	int s =  sizeof(rawCommand) / sizeof(rawCommand[0]);
	debug("size = %d\n", s);
	
    Result<LessarCommand> result = LessarCommand::decodeFromRaw(rawCommand, sizeof(rawCommand) / sizeof(rawCommand[0]));
	if (!result.ok()) {
	    debug("Error: %s\n", result.error());
		return;
	} 

	LessarCommand cmd = result.value();
    char buffer[1024];
    cmd.printBits(buffer);
    debug("Bits: %s\n", buffer);
}

int main() {
    testSimplePrint();
}
#endif